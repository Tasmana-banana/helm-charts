{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "properties": {
    "affinity": {
      "description": "Affinity settings for pod assignment",
      "required": [],
      "title": "affinity",
      "type": "object"
    },
    "autoscaling": {
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enable Horizontal POD autoscaling",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "maxReplicas": {
          "default": 100,
          "description": "Maximum number of replicas",
          "required": [],
          "title": "maxReplicas",
          "type": "integer"
        },
        "minReplicas": {
          "default": 1,
          "description": "Minimum number of replicas",
          "required": [],
          "title": "minReplicas",
          "type": "integer"
        },
        "targetCPUUtilizationPercentage": {
          "default": 80,
          "description": "Target CPU utilization percentage",
          "required": [],
          "title": "targetCPUUtilizationPercentage",
          "type": "integer"
        },
        "targetMemoryUtilizationPercentage": {
          "default": 80,
          "description": "Target Memory utilization percentage",
          "required": [],
          "title": "targetMemoryUtilizationPercentage",
          "type": "integer"
        }
      },
      "required": [
        "enabled",
        "minReplicas",
        "maxReplicas",
        "targetCPUUtilizationPercentage",
        "targetMemoryUtilizationPercentage"
      ],
      "title": "autoscaling",
      "type": "object"
    },
    "extraEnv": {
      "description": "additional environment variables to be added to the pods",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraEnv",
      "type": "array"
    },
    "fullnameOverride": {
      "default": "",
      "description": "String to fully override `\"maildev.fullname\"`",
      "required": [],
      "title": "fullnameOverride",
      "type": "string"
    },
    "global": {
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "required": [],
      "title": "global",
      "type": "object"
    },
    "image": {
      "properties": {
        "pullPolicy": {
          "default": "Always",
          "description": "image pull policy",
          "required": [],
          "title": "pullPolicy",
          "type": "string"
        },
        "registry": {
          "default": "docker.io",
          "description": "image registry",
          "required": [],
          "title": "registry",
          "type": "string"
        },
        "repository": {
          "default": "maildev/maildev",
          "description": "image repository",
          "required": [],
          "title": "repository",
          "type": "string"
        },
        "tag": {
          "default": "2.1.0",
          "description": "Overrides the image tag",
          "required": [],
          "title": "tag",
          "type": "string"
        }
      },
      "required": [
        "registry",
        "repository",
        "pullPolicy",
        "tag"
      ],
      "title": "image",
      "type": "object"
    },
    "imagePullSecrets": {
      "description": "If defined, uses a Secret to pull an image from a private Docker registry or repository.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "imagePullSecrets",
      "type": "array"
    },
    "ingress": {
      "properties": {
        "annotations": {
          "description": "Additional annotations for the Ingress resource",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "className": {
          "default": "",
          "description": "IngressClass that will be be used to implement the Ingress",
          "required": [],
          "title": "className",
          "type": "string"
        },
        "enabled": {
          "default": false,
          "description": "Enable ingress record generation",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "hosts": {
          "description": "cert-manager.io/cluster-issuer: cluster-issuer-name\nkubernetes.io/ingress.class: nginx\nkubernetes.io/tls-acme: \"true\"\nAn array with hosts and paths",
          "items": {
            "anyOf": [
              {
                "properties": {
                  "host": {
                    "default": "chart-example.local",
                    "required": [],
                    "title": "host",
                    "type": "string"
                  },
                  "paths": {
                    "items": {
                      "anyOf": [
                        {
                          "properties": {
                            "path": {
                              "default": "/",
                              "required": [],
                              "title": "path",
                              "type": "string"
                            },
                            "pathType": {
                              "default": "ImplementationSpecific",
                              "required": [],
                              "title": "pathType",
                              "type": "string"
                            }
                          },
                          "required": [
                            "path",
                            "pathType"
                          ],
                          "type": "object"
                        }
                      ],
                      "required": []
                    },
                    "required": [],
                    "title": "paths",
                    "type": "array"
                  }
                },
                "required": [
                  "host",
                  "paths"
                ],
                "type": "object"
              }
            ],
            "required": []
          },
          "required": [],
          "title": "hosts",
          "type": "array"
        },
        "tls": {
          "description": "An array with the tls configuration",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tls",
          "type": "array"
        }
      },
      "required": [
        "enabled",
        "className",
        "annotations",
        "hosts",
        "tls"
      ],
      "title": "ingress",
      "type": "object"
    },
    "maildev": {
      "properties": {
        "config": {
          "properties": {
            "https": {
              "properties": {
                "cert": {
                  "default": "",
                  "description": "The ssl cert file",
                  "required": [],
                  "title": "cert",
                  "type": "string"
                },
                "enabled": {
                  "default": false,
                  "description": "Switch from http to https protocol",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "key": {
                  "default": "",
                  "description": "The ssl private key",
                  "required": [],
                  "title": "key",
                  "type": "string"
                }
              },
              "required": [
                "enabled",
                "cert",
                "key"
              ],
              "title": "https",
              "type": "object"
            },
            "logMailContents": {
              "default": false,
              "description": "Log a JSON representation of each incoming mail",
              "required": [],
              "title": "logMailContents",
              "type": "boolean"
            },
            "mailDirectory": {
              "default": "/home/node/maildev-data",
              "description": "Directory for persisting mail",
              "required": [],
              "title": "mailDirectory",
              "type": "string"
            },
            "modes": {
              "properties": {
                "silent": {
                  "default": true,
                  "description": "Run maildev in silent mode to disable the startup messages",
                  "required": [],
                  "title": "silent",
                  "type": "boolean"
                },
                "verbose": {
                  "default": false,
                  "description": "Run maildev in verbose mode",
                  "required": [],
                  "title": "verbose",
                  "type": "boolean"
                }
              },
              "required": [
                "silent",
                "verbose"
              ],
              "title": "modes",
              "type": "object"
            },
            "smtp": {
              "properties": {
                "hideExtensions": {
                  "default": "",
                  "description": "Comma separated list of SMTP extensions to NOT advertise (SMTPUTF8, PIPELINING, 8BITMIME)",
                  "required": [],
                  "title": "hideExtensions",
                  "type": "string"
                },
                "incoming": {
                  "properties": {
                    "existingSecret": {
                      "default": "",
                      "description": "Name of an existing secret containing the password for the incoming SMTP mail. If set `maildev.config.smtp.incoming.password` will be ignored. Key needs to be `smtp-incoming-password`.",
                      "required": [],
                      "title": "existingSecret",
                      "type": "string"
                    },
                    "password": {
                      "default": "",
                      "description": "SMTP password for incoming mail",
                      "required": [],
                      "title": "password",
                      "type": "string"
                    },
                    "tls": {
                      "properties": {
                        "cert": {
                          "default": "",
                          "description": "Cert for incoming SSL",
                          "required": [],
                          "title": "cert",
                          "type": "string"
                        },
                        "enabled": {
                          "default": false,
                          "description": "Use SMTP SSL for incoming emails",
                          "required": [],
                          "title": "enabled",
                          "type": "boolean"
                        },
                        "existingSecret": {
                          "default": "",
                          "description": "Name of an existing TLS secret containing the cert and key for the incoming SMTP mail. If set `maildev.config.smtp.incoming.tls.cert` and `maildev.config.smtp.incoming.tls.key` will be ignored. Keys need to be `tls.crt` and `tls.key`.",
                          "required": [],
                          "title": "existingSecret",
                          "type": "string"
                        },
                        "key": {
                          "default": "",
                          "description": "Key for incoming SSL",
                          "required": [],
                          "title": "key",
                          "type": "string"
                        }
                      },
                      "required": [
                        "enabled",
                        "cert",
                        "existingSecret",
                        "key"
                      ],
                      "title": "tls",
                      "type": "object"
                    },
                    "username": {
                      "default": "",
                      "description": "SMTP user for incoming mail",
                      "required": [],
                      "title": "username",
                      "type": "string"
                    }
                  },
                  "required": [
                    "existingSecret",
                    "password",
                    "tls",
                    "username"
                  ],
                  "title": "incoming",
                  "type": "object"
                },
                "outgoing": {
                  "properties": {
                    "autoRelay": {
                      "properties": {
                        "enabled": {
                          "default": false,
                          "description": "Enabling the auto relay mode will automatically send each email to it's recipient without the need to click the \"Relay\" button. The outgoing email options are required to enable this feature.",
                          "required": [],
                          "title": "enabled",
                          "type": "boolean"
                        },
                        "mail": {
                          "default": "",
                          "description": "Optionally define a single email address which Maildev will forward all emails to instead of the original recipient",
                          "required": [],
                          "title": "mail",
                          "type": "string"
                        },
                        "rules": {
                          "description": "The additional configuration for what email addresses you would like to allow or deny.",
                          "items": {
                            "required": []
                          },
                          "required": [],
                          "title": "rules",
                          "type": "array"
                        }
                      },
                      "required": [
                        "enabled",
                        "mail",
                        "rules"
                      ],
                      "title": "autoRelay",
                      "type": "object"
                    },
                    "existingSecret": {
                      "default": "",
                      "description": "Name of an existing secret containing the password for the outgoing SMTP mail. If set `maildev.config.smtp.outgoing.password` will be ignored. Key needs to be `smtp-outgoing-password`.",
                      "required": [],
                      "title": "existingSecret",
                      "type": "string"
                    },
                    "host": {
                      "default": "",
                      "description": "SMTP host for outgoing mail",
                      "required": [],
                      "title": "host",
                      "type": "string"
                    },
                    "password": {
                      "default": "",
                      "description": "SMTP password for outgoing mail",
                      "required": [],
                      "title": "password",
                      "type": "string"
                    },
                    "port": {
                      "default": 25,
                      "description": "SMTP port for outgoing mail",
                      "required": [],
                      "title": "port",
                      "type": "integer"
                    },
                    "ssl": {
                      "default": false,
                      "description": "Use SMTP SSL for outgoing mail",
                      "required": [],
                      "title": "ssl",
                      "type": "boolean"
                    },
                    "username": {
                      "default": "",
                      "description": "SMTP user for outgoing mail",
                      "required": [],
                      "title": "username",
                      "type": "string"
                    }
                  },
                  "required": [
                    "autoRelay",
                    "existingSecret",
                    "host",
                    "password",
                    "port",
                    "ssl",
                    "username"
                  ],
                  "title": "outgoing",
                  "type": "object"
                }
              },
              "required": [
                "hideExtensions",
                "incoming",
                "outgoing"
              ],
              "title": "smtp",
              "type": "object"
            },
            "web": {
              "properties": {
                "disabled": {
                  "default": false,
                  "description": "Disable the use of the web interface. Useful for unit testing",
                  "required": [],
                  "title": "disabled",
                  "type": "boolean"
                },
                "existingSecret": {
                  "default": "",
                  "description": "Name of an existing secret containing the password for the GUI. If set `maildev.config.web.password` will be ignored. Key needs to be `web-password`.",
                  "required": [],
                  "title": "existingSecret",
                  "type": "string"
                },
                "password": {
                  "default": "",
                  "description": "Password for the GUI",
                  "required": [],
                  "title": "password",
                  "type": "string"
                },
                "username": {
                  "default": "",
                  "description": "Username for the GUI",
                  "required": [],
                  "title": "username",
                  "type": "string"
                }
              },
              "required": [
                "disabled",
                "existingSecret",
                "password",
                "username"
              ],
              "title": "web",
              "type": "object"
            }
          },
          "required": [
            "https",
            "logMailContents",
            "mailDirectory",
            "modes",
            "smtp",
            "web"
          ],
          "title": "config",
          "type": "object"
        },
        "persistence": {
          "properties": {
            "accessModes": {
              "description": "The desired access modes the volume should have.",
              "items": {
                "anyOf": [
                  {
                    "required": [],
                    "type": "string"
                  }
                ],
                "required": []
              },
              "required": [],
              "title": "accessModes",
              "type": "array"
            },
            "annotations": {
              "description": "Annotations to be added to the PersistentVolumeClaim",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "cron": {
              "description": "To clean some old mails when persistence is enabled",
              "properties": {
                "config": {
                  "properties": {
                    "daysToKeep": {
                      "default": 15,
                      "description": "How old emails may be before they get deleted",
                      "required": [],
                      "title": "daysToKeep",
                      "type": "integer"
                    },
                    "schedule": {
                      "default": "0 1 * * *",
                      "description": "The schedule on which the cronjob should run",
                      "required": [],
                      "title": "schedule",
                      "type": "string"
                    }
                  },
                  "required": [
                    "daysToKeep",
                    "schedule"
                  ],
                  "title": "config",
                  "type": "object"
                },
                "enabled": {
                  "default": false,
                  "description": "Enable the creation of a cronjob to periodically delete old emails",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "image": {
                  "properties": {
                    "pullPolicy": {
                      "default": "Always",
                      "description": "Image pull policy",
                      "required": [],
                      "title": "pullPolicy",
                      "type": "string"
                    },
                    "registry": {
                      "default": "docker.io",
                      "description": "Image registry",
                      "required": [],
                      "title": "registry",
                      "type": "string"
                    },
                    "repository": {
                      "default": "busybox",
                      "description": "Image repository",
                      "required": [],
                      "title": "repository",
                      "type": "string"
                    },
                    "tag": {
                      "default": "latest",
                      "description": "Overrides the image tag",
                      "required": [],
                      "title": "tag",
                      "type": "string"
                    }
                  },
                  "required": [
                    "registry",
                    "repository",
                    "pullPolicy",
                    "tag"
                  ],
                  "title": "image",
                  "type": "object"
                }
              },
              "required": [
                "enabled",
                "config",
                "image"
              ],
              "title": "cron",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "Use a PVC to persist data",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "existingClaim": {
              "default": "",
              "description": "Provide an existing PersistentVolumeClaim",
              "required": [],
              "title": "existingClaim",
              "type": "string"
            },
            "resources": {
              "description": "Represents the minimum and maximum resources the volume should have.",
              "properties": {
                "requests": {
                  "properties": {
                    "storage": {
                      "default": "2Gi",
                      "required": [],
                      "title": "storage",
                      "type": "string"
                    }
                  },
                  "required": [
                    "storage"
                  ],
                  "title": "requests",
                  "type": "object"
                }
              },
              "required": [
                "requests"
              ],
              "title": "resources",
              "type": "object"
            },
            "storageClassName": {
              "default": "",
              "description": "Name of the StorageClass required by the claim.",
              "required": [],
              "title": "storageClassName",
              "type": "string"
            }
          },
          "required": [
            "enabled",
            "accessModes",
            "annotations",
            "cron",
            "existingClaim",
            "storageClassName",
            "resources"
          ],
          "title": "persistence",
          "type": "object"
        }
      },
      "required": [
        "config",
        "persistence"
      ],
      "title": "maildev",
      "type": "object"
    },
    "nameOverride": {
      "default": "",
      "description": "Provide a name in place of `maildev`",
      "required": [],
      "title": "nameOverride",
      "type": "string"
    },
    "nodeSelector": {
      "description": "Node labels for pod assignment",
      "required": [],
      "title": "nodeSelector",
      "type": "object"
    },
    "podAnnotations": {
      "description": "Annotations to be added to the pods",
      "required": [],
      "title": "podAnnotations",
      "type": "object"
    },
    "podSecurityContext": {
      "description": "pod-level security context",
      "required": [],
      "title": "podSecurityContext",
      "type": "object"
    },
    "replicaCount": {
      "default": 1,
      "description": "Number of replicas",
      "required": [],
      "title": "replicaCount",
      "type": "integer"
    },
    "resources": {
      "description": "Resource limits and requests for the controller pods.",
      "required": [],
      "title": "resources",
      "type": "object"
    },
    "revisionHistoryLimit": {
      "default": 10,
      "description": "The number of old ReplicaSets to retain",
      "required": [],
      "title": "revisionHistoryLimit",
      "type": "integer"
    },
    "securityContext": {
      "description": "container-level security context",
      "required": [],
      "title": "securityContext",
      "type": "object"
    },
    "serviceAccount": {
      "properties": {
        "annotations": {
          "description": "Annotations to add to the service account",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "create": {
          "default": true,
          "description": "Specifies whether a service account should be created",
          "required": [],
          "title": "create",
          "type": "boolean"
        },
        "name": {
          "default": "",
          "description": "The name of the service account to use.\nIf not set and create is true, a name is generated using the fullname template",
          "required": [],
          "title": "name",
          "type": "string"
        }
      },
      "required": [
        "create",
        "annotations",
        "name"
      ],
      "title": "serviceAccount",
      "type": "object"
    },
    "services": {
      "properties": {
        "smtp": {
          "properties": {
            "nodePort": {
              "default": "",
              "description": "You can set the node port for the external SMTP server that should be used or leave it blank to get a random node port. Only active if `services.smtp.type == NodePort`",
              "required": [],
              "title": "nodePort",
              "type": "null"
            },
            "podPort": {
              "default": 1025,
              "description": "Pod port to use for the internal SMTP server",
              "required": [],
              "title": "podPort",
              "type": "integer"
            },
            "port": {
              "default": 1025,
              "description": "Kubernetes service port to use for the internal SMTP server",
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "type": {
              "default": "ClusterIP",
              "description": "Kubernetes service type for the SMTP server",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [
            "type",
            "port",
            "podPort",
            "nodePort"
          ],
          "title": "smtp",
          "type": "object"
        },
        "web": {
          "properties": {
            "podPort": {
              "default": 1080,
              "description": "Pod port to use for the web GUI",
              "required": [],
              "title": "podPort",
              "type": "integer"
            },
            "port": {
              "default": 1080,
              "description": "Kubernetes service port to use for the web GUI",
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "type": {
              "default": "ClusterIP",
              "description": "Kubernetes service type for the web GUI",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [
            "type",
            "port",
            "podPort"
          ],
          "title": "web",
          "type": "object"
        }
      },
      "required": [
        "web",
        "smtp"
      ],
      "title": "services",
      "type": "object"
    },
    "tolerations": {
      "description": "Toleration labels for pod assignment",
      "items": {
        "required": []
      },
      "required": [],
      "title": "tolerations",
      "type": "array"
    }
  },
  "required": [
    "nameOverride",
    "fullnameOverride",
    "image",
    "imagePullSecrets",
    "podAnnotations",
    "podSecurityContext",
    "replicaCount",
    "revisionHistoryLimit",
    "resources",
    "securityContext",
    "serviceAccount",
    "services",
    "ingress",
    "autoscaling",
    "nodeSelector",
    "tolerations",
    "affinity",
    "extraEnv",
    "maildev"
  ],
  "type": "object"
}
