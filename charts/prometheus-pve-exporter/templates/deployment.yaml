{{- $pveAuthSecret := include "pveAuthSecret" . -}}
{{- $pveAuthType := .Values.env.pveAuthType -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "prometheus-pve-exporter.fullname" . }}
  labels:
    {{- include "prometheus-pve-exporter.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "prometheus-pve-exporter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "prometheus-pve-exporter.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "prometheus-pve-exporter.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.args }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: PVE_USER
              value: {{ .Values.env.pveUser | quote }}
            - name: PVE_VERIFY_SSL
              value: {{ .Values.env.pveVerifySsl | quote }}
            {{- if eq $pveAuthType "password" }}
            - name: PVE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $pveAuthSecret | quote }}
                  key: "password"
            {{- end }}
            {{- if eq $pveAuthType "token" }}
            - name: PVE_TOKEN_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ $pveAuthSecret | quote }}
                  key: "tokenName"
            - name: PVE_TOKEN_VALUE
              valueFrom:
                secretKeyRef:
                  name: {{ $pveAuthSecret | quote }}
                  key: "tokenValue"
            {{- end }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 9221
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
