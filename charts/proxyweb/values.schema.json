{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "properties": {
    "affinity": {
      "description": "Affinity settings for pod assignment",
      "required": [],
      "title": "affinity",
      "type": "object"
    },
    "autoscaling": {
      "properties": {
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "maxReplicas": {
          "default": 100,
          "required": [],
          "title": "maxReplicas",
          "type": "integer"
        },
        "minReplicas": {
          "default": 1,
          "required": [],
          "title": "minReplicas",
          "type": "integer"
        },
        "targetCPUUtilizationPercentage": {
          "default": 80,
          "required": [],
          "title": "targetCPUUtilizationPercentage",
          "type": "integer"
        }
      },
      "required": [
        "enabled",
        "minReplicas",
        "maxReplicas",
        "targetCPUUtilizationPercentage"
      ],
      "title": "autoscaling",
      "type": "object"
    },
    "configuration": {
      "properties": {
        "config": {
          "properties": {
            "flask": {
              "properties": {
                "SECRET_KEY": {
                  "default": "kaNGSGSLrEzaplUL",
                  "required": [],
                  "title": "SECRET_KEY",
                  "type": "string"
                },
                "SEND_FILE_MAX_AGE_DEFAULT": {
                  "default": 0,
                  "required": [],
                  "title": "SEND_FILE_MAX_AGE_DEFAULT",
                  "type": "integer"
                },
                "TEMPLATES_AUTO_RELOAD": {
                  "default": "True",
                  "required": [],
                  "title": "TEMPLATES_AUTO_RELOAD",
                  "type": "string"
                }
              },
              "required": [
                "SECRET_KEY",
                "SEND_FILE_MAX_AGE_DEFAULT",
                "TEMPLATES_AUTO_RELOAD"
              ],
              "title": "flask",
              "type": "object"
            },
            "global": {
              "properties": {
                "default_server": {
                  "default": "proxysql",
                  "required": [],
                  "title": "default_server",
                  "type": "string"
                },
                "hide_tables": {
                  "items": {
                    "anyOf": [
                      {
                        "required": [],
                        "type": "string"
                      }
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "hide_tables",
                  "type": "array"
                },
                "read_only": {
                  "default": false,
                  "required": [],
                  "title": "read_only",
                  "type": "boolean"
                }
              },
              "required": [
                "hide_tables",
                "default_server",
                "read_only"
              ],
              "title": "global",
              "type": "object"
            },
            "misc": {
              "properties": {
                "adhoc_report": {
                  "description": "List of reports that should be displayed",
                  "items": {
                    "anyOf": [
                      {
                        "properties": {
                          "info": {
                            "default": "Examining queries with big sum_time(number of execution * time to run) is a good place to start when optimizing queries.",
                            "required": [],
                            "title": "info",
                            "type": "string"
                          },
                          "sql": {
                            "default": "SELECT digest,username,schemaname, SUBSTR(digest_text,0,80),count_star,sum_time/1000/1000 as sum_time_sec FROM stats_mysql_query_digest WHERE digest_text LIKE 'SELECT%' ORDER BY sum_time DESC LIMIT 10;",
                            "required": [],
                            "title": "sql",
                            "type": "string"
                          },
                          "title": {
                            "default": "Top 10 SELECTs by sum_time",
                            "required": [],
                            "title": "title",
                            "type": "string"
                          }
                        },
                        "required": [
                          "title",
                          "info",
                          "sql"
                        ],
                        "type": "object"
                      },
                      {
                        "properties": {
                          "info": {
                            "default": "Caching/rewriting/even removing  frequently running queries can improve the overall performance significantly. ProxySQL support all the mentioned methods. Example: it's a good idea to cache queries often issued by connectors like `^SELECT @@max_allowed_packet`",
                            "required": [],
                            "title": "info",
                            "type": "string"
                          },
                          "sql": {
                            "default": "SELECT digest,username,schemaname, SUBSTR(digest_text,0,80),count_star,sum_time FROM stats_mysql_query_digest WHERE digest_text LIKE 'SELECT%' ORDER BY count_star DESC LIMIT 10;",
                            "required": [],
                            "title": "sql",
                            "type": "string"
                          },
                          "title": {
                            "default": "Top 10 SELECTs by count_star",
                            "required": [],
                            "title": "title",
                            "type": "string"
                          }
                        },
                        "required": [
                          "title",
                          "info",
                          "sql"
                        ],
                        "type": "object"
                      },
                      {
                        "properties": {
                          "info": {
                            "default": "Caching/rewriting/even removing  frequently running queries can improve the overall performance significantly. ProxySQL support all the mentioned methods. Example: it's a good idea to cache queries often issued by connectors like `^SELECT @@max_allowed_packet`",
                            "required": [],
                            "title": "info",
                            "type": "string"
                          },
                          "sql": {
                            "default": "SELECT digest,username,schemaname, SUBSTR(digest_text,0,80),count_star,sum_time, (sum_time/count_star)/1000 as avg_time_ms FROM stats_mysql_query_digest WHERE digest_text LIKE 'SELECT%' ORDER BY avg_time_ms DESC LIMIT 10;",
                            "required": [],
                            "title": "sql",
                            "type": "string"
                          },
                          "title": {
                            "default": "Top 10 SELECTs by avg_time",
                            "required": [],
                            "title": "title",
                            "type": "string"
                          }
                        },
                        "required": [
                          "title",
                          "info",
                          "sql"
                        ],
                        "type": "object"
                      },
                      {
                        "properties": {
                          "info": {
                            "default": "This helps identify the most frequently running writes",
                            "required": [],
                            "title": "info",
                            "type": "string"
                          },
                          "sql": {
                            "default": "SELECT digest,username,schemaname, SUBSTR(digest_text,0,80),count_star,sum_time FROM stats_mysql_query_digest where digest_text LIKE 'INSERT%' or digest_text like 'DELETE%' or digest_text like 'UPDATE%' order by count_star DESC LIMIT 10;",
                            "required": [],
                            "title": "sql",
                            "type": "string"
                          },
                          "title": {
                            "default": "Top 10 writes",
                            "required": [],
                            "title": "title",
                            "type": "string"
                          }
                        },
                        "required": [
                          "title",
                          "info",
                          "sql"
                        ],
                        "type": "object"
                      },
                      {
                        "properties": {
                          "info": {
                            "default": "This helps identify the schemas getting the most writes",
                            "required": [],
                            "title": "info",
                            "type": "string"
                          },
                          "sql": {
                            "default": "SELECT schemaname, sum(sum_time) as time_spent, sum(count_star) as sum_count_star   FROM stats_mysql_query_digest where digest_text LIKE 'INSERT%' or digest_text like 'DELETE%' or digest_text like 'UPDATE%' group by schemaname order by time_spent desc;",
                            "required": [],
                            "title": "sql",
                            "type": "string"
                          },
                          "title": {
                            "default": "Schemas with the most DMLs",
                            "required": [],
                            "title": "title",
                            "type": "string"
                          }
                        },
                        "required": [
                          "title",
                          "info",
                          "sql"
                        ],
                        "type": "object"
                      },
                      {
                        "properties": {
                          "info": {
                            "default": "List of the schemas with the highest overall sum_time",
                            "required": [],
                            "title": "info",
                            "type": "string"
                          },
                          "sql": {
                            "default": "SELECT schemaname, sum(sum_time) as time_spent FROM stats_mysql_query_digest group by schemaname order by time_spent desc limit 5;",
                            "required": [],
                            "title": "sql",
                            "type": "string"
                          },
                          "title": {
                            "default": "Top 5 schemas by sum_time",
                            "required": [],
                            "title": "title",
                            "type": "string"
                          }
                        },
                        "required": [
                          "title",
                          "info",
                          "sql"
                        ],
                        "type": "object"
                      },
                      {
                        "properties": {
                          "info": {
                            "default": "Don't send  selects to the readers without checking the impact first as the app might read back the data immediately after writing it.",
                            "required": [],
                            "title": "info",
                            "type": "string"
                          },
                          "sql": {
                            "default": "select \"replace into mysql_query_rules (username,schemaname,destination_hostgroup,active,apply,digest) values('\" || st.username || \"','\" || st.schemaname || \"',12,1,1,'\" ||  st.digest || \"');\" from stats_mysql_query_digest st left join runtime_mysql_query_rules qr on st.digest = qr.digest where  qr.rule_id is null  and digest_text LIKE 'SELECT%' ORDER BY count_star desc limit 5;",
                            "required": [],
                            "title": "sql",
                            "type": "string"
                          },
                          "title": {
                            "default": "Send the top 5 SELECTS to the readers",
                            "required": [],
                            "title": "title",
                            "type": "string"
                          }
                        },
                        "required": [
                          "title",
                          "info",
                          "sql"
                        ],
                        "type": "object"
                      }
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "adhoc_report",
                  "type": "array"
                }
              },
              "required": [
                "adhoc_report"
              ],
              "title": "misc",
              "type": "object"
            },
            "servers": {
              "properties": {
                "proxysql": {
                  "properties": {
                    "dsn": {
                      "items": {
                        "anyOf": [
                          {
                            "properties": {
                              "db": {
                                "default": "main",
                                "required": [],
                                "title": "db",
                                "type": "string"
                              },
                              "host": {
                                "default": "127.0.0.1",
                                "required": [],
                                "title": "host",
                                "type": "string"
                              },
                              "passwd": {
                                "default": "sadmin",
                                "required": [],
                                "title": "passwd",
                                "type": "string"
                              },
                              "port": {
                                "default": "6032",
                                "required": [],
                                "title": "port",
                                "type": "string"
                              },
                              "user": {
                                "default": "sadmin",
                                "required": [],
                                "title": "user",
                                "type": "string"
                              }
                            },
                            "required": [
                              "host",
                              "user",
                              "passwd",
                              "port",
                              "db"
                            ],
                            "type": "object"
                          }
                        ],
                        "required": []
                      },
                      "required": [],
                      "title": "dsn",
                      "type": "array"
                    }
                  },
                  "required": [
                    "dsn"
                  ],
                  "title": "proxysql",
                  "type": "object"
                }
              },
              "required": [
                "proxysql"
              ],
              "title": "servers",
              "type": "object"
            }
          },
          "required": [
            "flask",
            "global",
            "misc",
            "servers"
          ],
          "title": "config",
          "type": "object"
        },
        "existingSecret": {
          "default": "",
          "required": [],
          "title": "existingSecret",
          "type": "string"
        }
      },
      "required": [
        "existingSecret",
        "config"
      ],
      "title": "configuration",
      "type": "object"
    },
    "fullnameOverride": {
      "default": "",
      "description": "String to fully override `\"proxyweb.fullname\"`",
      "required": [],
      "title": "fullnameOverride",
      "type": "string"
    },
    "global": {
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "required": [],
      "title": "global",
      "type": "object"
    },
    "image": {
      "properties": {
        "pullPolicy": {
          "default": "Always",
          "description": "image pull policy",
          "required": [],
          "title": "pullPolicy",
          "type": "string"
        },
        "repository": {
          "default": "proxyweb/proxyweb",
          "description": "image repository",
          "required": [],
          "title": "repository",
          "type": "string"
        },
        "tag": {
          "default": "latest",
          "description": "Overrides the image tag",
          "required": [],
          "title": "tag",
          "type": "string"
        }
      },
      "required": [
        "repository",
        "pullPolicy",
        "tag"
      ],
      "title": "image",
      "type": "object"
    },
    "imagePullSecrets": {
      "description": "If defined, uses a Secret to pull an image from a private Docker registry or repository.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "imagePullSecrets",
      "type": "array"
    },
    "ingress": {
      "properties": {
        "annotations": {
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "className": {
          "default": "",
          "required": [],
          "title": "className",
          "type": "string"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "hosts": {
          "description": "kubernetes.io/ingress.class: nginx\nkubernetes.io/tls-acme: \"true\"",
          "items": {
            "anyOf": [
              {
                "properties": {
                  "host": {
                    "default": "chart-example.local",
                    "required": [],
                    "title": "host",
                    "type": "string"
                  },
                  "paths": {
                    "items": {
                      "anyOf": [
                        {
                          "properties": {
                            "path": {
                              "default": "/",
                              "required": [],
                              "title": "path",
                              "type": "string"
                            },
                            "pathType": {
                              "default": "ImplementationSpecific",
                              "required": [],
                              "title": "pathType",
                              "type": "string"
                            }
                          },
                          "required": [
                            "path",
                            "pathType"
                          ],
                          "type": "object"
                        }
                      ],
                      "required": []
                    },
                    "required": [],
                    "title": "paths",
                    "type": "array"
                  }
                },
                "required": [
                  "host",
                  "paths"
                ],
                "type": "object"
              }
            ],
            "required": []
          },
          "required": [],
          "title": "hosts",
          "type": "array"
        },
        "tls": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "tls",
          "type": "array"
        }
      },
      "required": [
        "enabled",
        "className",
        "annotations",
        "hosts",
        "tls"
      ],
      "title": "ingress",
      "type": "object"
    },
    "nameOverride": {
      "default": "",
      "description": "Provide a name in place of `proxyweb`",
      "required": [],
      "title": "nameOverride",
      "type": "string"
    },
    "nodeSelector": {
      "description": "Node labels for pod assignment",
      "required": [],
      "title": "nodeSelector",
      "type": "object"
    },
    "podAnnotations": {
      "description": "Annotations to be added to pods",
      "required": [],
      "title": "podAnnotations",
      "type": "object"
    },
    "podSecurityContext": {
      "description": "pod-level security context",
      "required": [],
      "title": "podSecurityContext",
      "type": "object"
    },
    "psp": {
      "properties": {
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [
        "enabled"
      ],
      "title": "psp",
      "type": "object"
    },
    "replicaCount": {
      "default": 1,
      "description": "Number of replicas",
      "required": [],
      "title": "replicaCount",
      "type": "integer"
    },
    "resources": {
      "description": "Resource limits and requests for the headwind pods.",
      "required": [],
      "title": "resources",
      "type": "object"
    },
    "revisionHistoryLimit": {
      "default": 10,
      "description": "The number of old ReplicaSets to retain",
      "required": [],
      "title": "revisionHistoryLimit",
      "type": "integer"
    },
    "securityContext": {
      "description": "container-level security context",
      "required": [],
      "title": "securityContext",
      "type": "object"
    },
    "service": {
      "properties": {
        "port": {
          "default": 80,
          "description": "Kubernetes port where service is exposed",
          "required": [],
          "title": "port",
          "type": "integer"
        },
        "type": {
          "default": "ClusterIP",
          "description": "Kubernetes service type",
          "required": [],
          "title": "type",
          "type": "string"
        }
      },
      "required": [
        "type",
        "port"
      ],
      "title": "service",
      "type": "object"
    },
    "serviceAccount": {
      "properties": {
        "annotations": {
          "description": "Annotations to add to the service account",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "create": {
          "default": true,
          "description": "Specifies whether a service account should be created",
          "required": [],
          "title": "create",
          "type": "boolean"
        },
        "name": {
          "default": "",
          "description": "The name of the service account to use.\nIf not set and create is true, a name is generated using the fullname template",
          "required": [],
          "title": "name",
          "type": "string"
        }
      },
      "required": [
        "create",
        "annotations",
        "name"
      ],
      "title": "serviceAccount",
      "type": "object"
    },
    "tolerations": {
      "description": "Toleration labels for pod assignment",
      "items": {
        "required": []
      },
      "required": [],
      "title": "tolerations",
      "type": "array"
    }
  },
  "required": [
    "nameOverride",
    "fullnameOverride",
    "image",
    "imagePullSecrets",
    "replicaCount",
    "revisionHistoryLimit",
    "serviceAccount",
    "podAnnotations",
    "podSecurityContext",
    "securityContext",
    "service",
    "ingress",
    "resources",
    "autoscaling",
    "nodeSelector",
    "tolerations",
    "affinity",
    "psp",
    "configuration"
  ],
  "type": "object"
}
