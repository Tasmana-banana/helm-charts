{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "properties": {
    "externalDatabase": {
      "properties": {
        "auth": {
          "properties": {
            "database": {
              "default": "taiga",
              "description": "Name of the database to use",
              "required": [],
              "title": "database",
              "type": "string"
            },
            "existingSecret": {
              "default": "",
              "description": "Name of existing secret to use for database credentials",
              "required": [],
              "title": "existingSecret",
              "type": "string"
            },
            "password": {
              "default": "taiga",
              "description": "Password to use",
              "required": [],
              "title": "password",
              "type": "string"
            },
            "userPasswordKey": {
              "default": "",
              "description": "Key in the secret containing the password",
              "required": [],
              "title": "userPasswordKey",
              "type": "string"
            },
            "username": {
              "default": "taiga",
              "description": "Name of the user to use",
              "required": [],
              "title": "username",
              "type": "string"
            }
          },
          "required": [
            "database",
            "existingSecret",
            "password",
            "username",
            "userPasswordKey"
          ],
          "title": "auth",
          "type": "object"
        },
        "hostname": {
          "default": "",
          "description": "Hostname of the database",
          "required": [],
          "title": "hostname",
          "type": "string"
        },
        "port": {
          "default": 5432,
          "description": "Port used to connect to database",
          "required": [],
          "title": "port",
          "type": "integer"
        }
      },
      "required": [
        "auth",
        "hostname",
        "port"
      ],
      "title": "externalDatabase",
      "type": "object"
    },
    "fullnameOverride": {
      "default": "",
      "description": "String to fully override `\"taiga.fullname\"`",
      "required": [],
      "title": "fullnameOverride",
      "type": "string"
    },
    "global": {
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "required": [],
      "title": "global",
      "type": "object"
    },
    "nameOverride": {
      "default": "",
      "description": "Provide a name in place of `taiga`",
      "required": [],
      "title": "nameOverride",
      "type": "string"
    },
    "postgresql": {
      "properties": {
        "auth": {
          "properties": {
            "database": {
              "default": "taiga",
              "description": "Name for a custom database to create",
              "required": [],
              "title": "database",
              "type": "string"
            },
            "existingSecret": {
              "default": "",
              "description": "Name of existing secret to use for PostgreSQL credentials",
              "required": [],
              "title": "existingSecret",
              "type": "string"
            },
            "password": {
              "default": "taiga",
              "description": "Password for the custom user to create. Ignored if postgresql.auth.existingSecret is provided",
              "required": [],
              "title": "password",
              "type": "string"
            },
            "username": {
              "default": "taiga",
              "description": "Name for a custom user to create",
              "required": [],
              "title": "username",
              "type": "string"
            }
          },
          "required": [
            "database",
            "existingSecret",
            "password",
            "username"
          ],
          "title": "auth",
          "type": "object"
        },
        "enabled": {
          "default": true,
          "description": "enable PostgreSQL™ subchart from Bitnami",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [
        "enabled",
        "auth"
      ],
      "title": "postgresql",
      "type": "object"
    },
    "rabbitmq": {
      "properties": {
        "auth": {
          "properties": {
            "existingSecret": {
              "default": "",
              "description": "Use existing secret for password details (`config.rabbitmq.auth.password` will be ignored and picked up from this secret). The secret has to contain the key `rabbitmq-password`.",
              "required": [],
              "title": "existingSecret",
              "type": "string"
            },
            "password": {
              "default": "",
              "description": "The password credential to be used when using an external database driver.",
              "required": [],
              "title": "password",
              "type": "string"
            },
            "username": {
              "default": "",
              "description": "The username credential to be used when using an external database driver.",
              "required": [],
              "title": "username",
              "type": "string"
            }
          },
          "required": [
            "existingSecret",
            "password",
            "username"
          ],
          "title": "auth",
          "type": "object"
        },
        "enabled": {
          "default": true,
          "description": "enable integrated RabbitMQ™ subchart from Bitnami",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "host": {
          "default": "",
          "description": "The RabbitMQ server host name",
          "required": [],
          "title": "host",
          "type": "string"
        },
        "useSsl": {
          "default": false,
          "description": "Whether connection is encrypted with SSL/TLS or not.",
          "required": [],
          "title": "useSsl",
          "type": "boolean"
        },
        "vhost": {
          "default": "/",
          "description": "The RabbitMQ server VHost",
          "required": [],
          "title": "vhost",
          "type": "string"
        }
      },
      "required": [
        "enabled",
        "auth",
        "host",
        "useSsl",
        "vhost"
      ],
      "title": "rabbitmq",
      "type": "object"
    },
    "taiga": {
      "properties": {
        "backend": {
          "properties": {
            "affinity": {
              "description": "Affinity settings for pod assignment",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "maxReplicas": {
                  "default": 100,
                  "required": [],
                  "title": "maxReplicas",
                  "type": "integer"
                },
                "minReplicas": {
                  "default": 1,
                  "required": [],
                  "title": "minReplicas",
                  "type": "integer"
                },
                "targetCPUUtilizationPercentage": {
                  "default": 80,
                  "required": [],
                  "title": "targetCPUUtilizationPercentage",
                  "type": "integer"
                }
              },
              "required": [
                "enabled",
                "minReplicas",
                "maxReplicas",
                "targetCPUUtilizationPercentage"
              ],
              "title": "autoscaling",
              "type": "object"
            },
            "image": {
              "properties": {
                "pullPolicy": {
                  "default": "Always",
                  "description": "image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": "string"
                },
                "registry": {
                  "default": "docker.io",
                  "description": "image registry",
                  "required": [],
                  "title": "registry",
                  "type": "string"
                },
                "repository": {
                  "default": "taigaio/taiga-back",
                  "description": "image repository",
                  "required": [],
                  "title": "repository",
                  "type": "string"
                },
                "tag": {
                  "default": "6.8.2",
                  "description": "Overrides the image tag",
                  "required": [],
                  "title": "tag",
                  "type": "string"
                }
              },
              "required": [
                "registry",
                "repository",
                "pullPolicy",
                "tag"
              ],
              "title": "image",
              "type": "object"
            },
            "imagePullSecrets": {
              "description": "If defined, uses a Secret to pull an image from a private Docker registry or repository.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "imagePullSecrets",
              "type": "array"
            },
            "nodeSelector": {
              "description": "Node labels for pod assignment",
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podAnnotations": {
              "description": "Annotations to be added to exporter pods",
              "required": [],
              "title": "podAnnotations",
              "type": "object"
            },
            "podSecurityContext": {
              "description": "pod-level security context",
              "required": [],
              "title": "podSecurityContext",
              "type": "object"
            },
            "replicaCount": {
              "default": 1,
              "description": "Number of replicas",
              "required": [],
              "title": "replicaCount",
              "type": "integer"
            },
            "resources": {
              "description": "Resource limits and requests for the headwind pods.",
              "required": [],
              "title": "resources",
              "type": "object"
            },
            "revisionHistoryLimit": {
              "default": 10,
              "description": "The number of old ReplicaSets to retain",
              "required": [],
              "title": "revisionHistoryLimit",
              "type": "integer"
            },
            "securityContext": {
              "description": "container-level security context",
              "required": [],
              "title": "securityContext",
              "type": "object"
            },
            "service": {
              "properties": {
                "port": {
                  "default": 8080,
                  "description": "Kubernetes port where service is exposed",
                  "required": [],
                  "title": "port",
                  "type": "integer"
                },
                "type": {
                  "default": "ClusterIP",
                  "description": "Kubernetes service type",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [
                "type",
                "port"
              ],
              "title": "service",
              "type": "object"
            },
            "serviceAccount": {
              "properties": {
                "annotations": {
                  "description": "Annotations to add to the service account",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "create": {
                  "default": true,
                  "description": "Specifies whether a service account should be created",
                  "required": [],
                  "title": "create",
                  "type": "boolean"
                },
                "name": {
                  "default": "",
                  "description": "The name of the service account to use.\nIf not set and create is true, a name is generated using the fullname template",
                  "required": [],
                  "title": "name",
                  "type": "string"
                }
              },
              "required": [
                "create",
                "annotations",
                "name"
              ],
              "title": "serviceAccount",
              "type": "object"
            },
            "tolerations": {
              "description": "Toleration labels for pod assignment",
              "items": {
                "required": []
              },
              "required": [],
              "title": "tolerations",
              "type": "array"
            }
          },
          "required": [
            "image",
            "imagePullSecrets",
            "replicaCount",
            "revisionHistoryLimit",
            "serviceAccount",
            "podAnnotations",
            "podSecurityContext",
            "securityContext",
            "service",
            "resources",
            "autoscaling",
            "nodeSelector",
            "tolerations",
            "affinity"
          ],
          "title": "backend",
          "type": "object"
        },
        "frontend": {
          "properties": {
            "affinity": {
              "description": "Affinity settings for pod assignment",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "properties": {
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "maxReplicas": {
                  "default": 100,
                  "required": [],
                  "title": "maxReplicas",
                  "type": "integer"
                },
                "minReplicas": {
                  "default": 1,
                  "required": [],
                  "title": "minReplicas",
                  "type": "integer"
                },
                "targetCPUUtilizationPercentage": {
                  "default": 80,
                  "required": [],
                  "title": "targetCPUUtilizationPercentage",
                  "type": "integer"
                }
              },
              "required": [
                "enabled",
                "minReplicas",
                "maxReplicas",
                "targetCPUUtilizationPercentage"
              ],
              "title": "autoscaling",
              "type": "object"
            },
            "image": {
              "properties": {
                "pullPolicy": {
                  "default": "Always",
                  "description": "image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": "string"
                },
                "registry": {
                  "default": "docker.io",
                  "description": "image registry",
                  "required": [],
                  "title": "registry",
                  "type": "string"
                },
                "repository": {
                  "default": "taigaio/taiga-back",
                  "description": "image repository",
                  "required": [],
                  "title": "repository",
                  "type": "string"
                },
                "tag": {
                  "default": "6.8.2",
                  "description": "Overrides the image tag",
                  "required": [],
                  "title": "tag",
                  "type": "string"
                }
              },
              "required": [
                "registry",
                "repository",
                "pullPolicy",
                "tag"
              ],
              "title": "image",
              "type": "object"
            },
            "imagePullSecrets": {
              "description": "If defined, uses a Secret to pull an image from a private Docker registry or repository.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "imagePullSecrets",
              "type": "array"
            },
            "ingress": {
              "properties": {
                "annotations": {
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "className": {
                  "default": "",
                  "required": [],
                  "title": "className",
                  "type": "string"
                },
                "enabled": {
                  "default": false,
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "hosts": {
                  "description": "kubernetes.io/ingress.class: nginx\nkubernetes.io/tls-acme: \"true\"",
                  "items": {
                    "anyOf": [
                      {
                        "properties": {
                          "host": {
                            "default": "chart-example.local",
                            "required": [],
                            "title": "host",
                            "type": "string"
                          },
                          "paths": {
                            "items": {
                              "anyOf": [
                                {
                                  "properties": {
                                    "path": {
                                      "default": "/",
                                      "required": [],
                                      "title": "path",
                                      "type": "string"
                                    },
                                    "pathType": {
                                      "default": "ImplementationSpecific",
                                      "required": [],
                                      "title": "pathType",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "path",
                                    "pathType"
                                  ],
                                  "type": "object"
                                }
                              ],
                              "required": []
                            },
                            "required": [],
                            "title": "paths",
                            "type": "array"
                          }
                        },
                        "required": [
                          "host",
                          "paths"
                        ],
                        "type": "object"
                      }
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "hosts",
                  "type": "array"
                },
                "tls": {
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "tls",
                  "type": "array"
                }
              },
              "required": [
                "enabled",
                "className",
                "annotations",
                "hosts",
                "tls"
              ],
              "title": "ingress",
              "type": "object"
            },
            "nodeSelector": {
              "description": "Node labels for pod assignment",
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podAnnotations": {
              "description": "Annotations to be added to exporter pods",
              "required": [],
              "title": "podAnnotations",
              "type": "object"
            },
            "podSecurityContext": {
              "description": "pod-level security context",
              "required": [],
              "title": "podSecurityContext",
              "type": "object"
            },
            "replicaCount": {
              "default": 1,
              "description": "Number of replicas",
              "required": [],
              "title": "replicaCount",
              "type": "integer"
            },
            "resources": {
              "description": "Resource limits and requests for the headwind pods.",
              "required": [],
              "title": "resources",
              "type": "object"
            },
            "revisionHistoryLimit": {
              "default": 10,
              "description": "The number of old ReplicaSets to retain",
              "required": [],
              "title": "revisionHistoryLimit",
              "type": "integer"
            },
            "securityContext": {
              "description": "container-level security context",
              "required": [],
              "title": "securityContext",
              "type": "object"
            },
            "service": {
              "properties": {
                "port": {
                  "default": 8080,
                  "description": "Kubernetes port where service is exposed",
                  "required": [],
                  "title": "port",
                  "type": "integer"
                },
                "type": {
                  "default": "ClusterIP",
                  "description": "Kubernetes service type",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [
                "type",
                "port"
              ],
              "title": "service",
              "type": "object"
            },
            "serviceAccount": {
              "properties": {
                "annotations": {
                  "description": "Annotations to add to the service account",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "create": {
                  "default": true,
                  "description": "Specifies whether a service account should be created",
                  "required": [],
                  "title": "create",
                  "type": "boolean"
                },
                "name": {
                  "default": "",
                  "description": "The name of the service account to use.\nIf not set and create is true, a name is generated using the fullname template",
                  "required": [],
                  "title": "name",
                  "type": "string"
                }
              },
              "required": [
                "create",
                "annotations",
                "name"
              ],
              "title": "serviceAccount",
              "type": "object"
            },
            "tolerations": {
              "description": "Toleration labels for pod assignment",
              "items": {
                "required": []
              },
              "required": [],
              "title": "tolerations",
              "type": "array"
            }
          },
          "required": [
            "image",
            "imagePullSecrets",
            "replicaCount",
            "revisionHistoryLimit",
            "serviceAccount",
            "podAnnotations",
            "podSecurityContext",
            "securityContext",
            "service",
            "ingress",
            "resources",
            "autoscaling",
            "nodeSelector",
            "tolerations",
            "affinity"
          ],
          "title": "frontend",
          "type": "object"
        }
      },
      "required": [
        "backend",
        "frontend"
      ],
      "title": "taiga",
      "type": "object"
    }
  },
  "required": [
    "nameOverride",
    "fullnameOverride",
    "taiga",
    "postgresql",
    "rabbitmq",
    "externalDatabase"
  ],
  "type": "object"
}
