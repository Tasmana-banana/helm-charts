apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "kubevirt-manager.labels" . | nindent 4 }}
  name: {{ include "kubevirt-manager.fullname" . }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "kubevirt-manager.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kubevirt-manager.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kubevirt-manager.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- range .Values.extraEnv }}
            {{- if and (.name) (.value) }}
            - name: {{ .name | quote }}
              value: {{ .value | quote }}
            {{- end }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: cache-volume
              mountPath: /var/cache/nginx
            - name: run-volume
              mountPath: /var/run
            {{- if .Values.ingress.basicAuth.enabled }}
            - name: auth-config
              mountPath: /etc/nginx/auth.d/
            - name: auth-secret
              mountPath: /etc/nginx/secret.d/
            {{- end }}
            {{- if .Values.prometheus.enabled }}
            - name: prometheus-config
              mountPath: /etc/nginx/location.d/
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: cache-volume
          emptyDir: {}
        - name: run-volume
          emptyDir: {}
        {{- if .Values.ingress.basicAuth.enabled }}
        - name: auth-config
          configMap:
            name: {{ template "kubevirt-manager.fullname" . }}
            items:
              - key: basicauth.conf
                path: basicauth.conf
        - name: auth-secret
          secret:
            secretName: {{ include "kubevirt-manager.ingress.basicAuth.secretName" . }}
            items:
              - key: .htpasswd
                path: .htpasswd
        {{- end }}
        {{- if .Values.prometheus.enabled }}
        - name: prometheus-config
          configMap:
            name: {{ template "kubevirt-manager.fullname" . }}
            items:
              - key: prometheus.conf
                path: prometheus.conf
        {{- end }}
